# Default values for prometheus-bme280-exporter.
# This is a YAML-formatted file. declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: lukasbahr/prometheus-bme280-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "74b2a86"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Additionnal arguments that are passed to the exporter.
args:
  - "--accuracy=ACCURACY_STANDARD"
  - "--port=9123"
  - "--loglevel=debug"

# The container port, where the application runs on. Must be specified with the --port arg. Defaults to 9123
port: {}
logLevel: {}

## A string to add extra environment variables
envVars: |
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Add the annotations to pods for prometheus service discovery
podAnnotations: 
  prometheus.io/path: /metrics
  prometheus.io/port: "9123"
  prometheus.io/scrape: "true"

podSecurityContext: {}
  # fsGroup: 2000

# atm, we need privileged=true due to the device access of /dev/i2c-1
securityContext:
  privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe:
  path: /metrics
  port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  path: /metrics
  port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

service:
  type: ClusterIP
  port: 80

resources: 
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 200Mi

terminationGracePeriodSeconds: 10

# We need to specify the nodeSelector to ensure the container only runs on nodes where the sensor has been installed
nodeSelector: 
  k3s.io/exporter-bme380-enabled: "true"

tolerations: []

affinity: {}
